node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "ReadFile"
  op: "ReadFile"
  input: "Placeholder"
}
node {
  name: "DecodeWav"
  op: "DecodeWav"
  input: "ReadFile"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 16000
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "DecodeWav"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Pad"
  op: "Pad"
  input: "Mul"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200>\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Pad"
  input: "Placeholder_3"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16000
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul_1"
  op: "Mul"
  input: "Placeholder_4"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add"
  op: "Add"
  input: "Mul_1"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_value/Minimum"
  op: "Minimum"
  input: "Add"
  input: "clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "clip_by_value"
  op: "Maximum"
  input: "clip_by_value/Minimum"
  input: "clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AudioSpectrogram"
  op: "AudioSpectrogram"
  input: "clip_by_value"
  attr {
    key: "magnitude_squared"
    value {
      b: true
    }
  }
  attr {
    key: "stride"
    value {
      i: 160
    }
  }
  attr {
    key: "window_size"
    value {
      i: 480
    }
  }
}
node {
  name: "Mfcc"
  op: "Mfcc"
  input: "AudioSpectrogram"
  input: "DecodeWav:1"
  attr {
    key: "dct_coefficient_count"
    value {
      i: 40
    }
  }
  attr {
    key: "filterbank_channel_count"
    value {
      i: 40
    }
  }
  attr {
    key: "lower_frequency_limit"
    value {
      f: 20.0
    }
  }
  attr {
    key: "upper_frequency_limit"
    value {
      f: 4000.0
    }
  }
}
node {
  name: "fingerprint_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3920
        }
      }
    }
  }
}
node {
  name: "dropout_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "fingerprint_input"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ResizeBilinear/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\340\000\000\000\340\000\000\000"
      }
    }
  }
}
node {
  name: "ResizeBilinear"
  op: "ResizeBilinear"
  input: "Reshape"
  input: "ResizeBilinear/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/weights"
  input: "MobileNet/conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/read"
  op: "Identity"
  input: "MobileNet/conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/biases"
  input: "MobileNet/conv_1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/read"
  op: "Identity"
  input: "MobileNet/conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/Conv2D"
  op: "Conv2D"
  input: "ResizeBilinear"
  input: "MobileNet/conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_1/Conv2D"
  input: "MobileNet/conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/beta"
  input: "MobileNet/conv_1/batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  input: "MobileNet/conv_1/batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  input: "MobileNet/conv_1/batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_1/BiasAdd"
  input: "MobileNet/conv_1/batch_norm/Const"
  input: "MobileNet/conv_1/batch_norm/beta/read"
  input: "MobileNet/conv_1/batch_norm/Const_1"
  input: "MobileNet/conv_1/batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_1/batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_1/batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_1/batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  input: "MobileNet/conv_1/batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_1/batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_1/batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_1/batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  input: "MobileNet/conv_1/batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_1/batch_norm/Relu"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_2/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_2/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_2/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_3/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_3/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_3/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_4/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_4/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_4/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_5/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_5/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_6/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_6/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_6/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_7/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_7/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_7/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_8/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_8/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_9/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_9/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_9/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_9/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_9/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_10/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_10/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_10/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_10/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_10/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_11/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_11/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_11/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_11/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_11/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_12/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_12/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_12/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_12/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_12/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_13/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_13/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_13/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025503069162368774
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025503069162368774
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Relu"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_14/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/dw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05412658676505089
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05412658676505089
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/max"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/mul"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/Conv2D"
  op: "Conv2D"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/conv_ds_14/pointwise_conv/Conv2D"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/read"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Const_1"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg/read"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg/Sub"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg_1/read"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg_1/Sub"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/pw_batch_norm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/Relu"
  op: "Relu"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/avg_pool_15/AvgPool"
  op: "AvgPool"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 7
        i: 7
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MobileNet/SpatialSqueeze"
  op: "Squeeze"
  input: "MobileNet/avg_pool_15/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07610194385051727
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07610194385051727
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/max"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/RandomUniform"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Initializer/random_uniform"
  op: "Add"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/mul"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Assign"
  op: "Assign"
  input: "MobileNet/fc_16/weights"
  input: "MobileNet/fc_16/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/read"
  op: "Identity"
  input: "MobileNet/fc_16/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/Assign"
  op: "Assign"
  input: "MobileNet/fc_16/biases"
  input: "MobileNet/fc_16/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/read"
  op: "Identity"
  input: "MobileNet/fc_16/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/MatMul"
  op: "MatMul"
  input: "MobileNet/SpatialSqueeze"
  input: "MobileNet/fc_16/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "MobileNet/fc_16/BiasAdd"
  op: "BiasAdd"
  input: "MobileNet/fc_16/MatMul"
  input: "MobileNet/fc_16/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MobileNet/Predictions/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\014\000\000\000"
      }
    }
  }
}
node {
  name: "MobileNet/Predictions/Reshape"
  op: "Reshape"
  input: "MobileNet/fc_16/BiasAdd"
  input: "MobileNet/Predictions/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobileNet/Predictions/Softmax"
  op: "Softmax"
  input: "MobileNet/Predictions/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MobileNet/Predictions/Shape"
  op: "Shape"
  input: "MobileNet/fc_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MobileNet/Predictions/Reshape_1"
  op: "Reshape"
  input: "MobileNet/Predictions/Softmax"
  input: "MobileNet/Predictions/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "groundtruth_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "MobileNet/fc_16/BiasAdd"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_2"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/div"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/learning_rate_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "train/momentum"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "train/gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select_1"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/mul_1"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/mul_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Tile"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/mul_1"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/mul_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/fc_16/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/fc_16/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^train/gradients/MobileNet/fc_16/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/fc_16/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^train/gradients/MobileNet/fc_16/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/fc_16/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/fc_16/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/fc_16/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/fc_16/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/fc_16/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/MobileNet/fc_16/BiasAdd_grad/tuple/control_dependency"
  input: "MobileNet/fc_16/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/fc_16/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "MobileNet/SpatialSqueeze"
  input: "train/gradients/MobileNet/fc_16/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/MobileNet/fc_16/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/fc_16/MatMul_grad/MatMul"
  input: "^train/gradients/MobileNet/fc_16/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/MobileNet/fc_16/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/fc_16/MatMul_grad/MatMul"
  input: "^train/gradients/MobileNet/fc_16/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/fc_16/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/fc_16/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/fc_16/MatMul_grad/MatMul_1"
  input: "^train/gradients/MobileNet/fc_16/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/fc_16/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/SpatialSqueeze_grad/Shape"
  op: "Shape"
  input: "MobileNet/avg_pool_15/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/SpatialSqueeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/MobileNet/fc_16/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/MobileNet/SpatialSqueeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/avg_pool_15/AvgPool_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/avg_pool_15/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "train/gradients/MobileNet/avg_pool_15/AvgPool_grad/Shape"
  input: "train/gradients/MobileNet/SpatialSqueeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 7
        i: 7
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/avg_pool_15/AvgPool_grad/AvgPoolGrad"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_14/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_14/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_14/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_14/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_13/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_13/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_13/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_13/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_12/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_12/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_12/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_12/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_11/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_11/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_11/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_11/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_10/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_10/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_37"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_38"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_39"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_40"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_10/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_10/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_41"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_42"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_43"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_44"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_9/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_9/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_45"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_46"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_47"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_48"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_9/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_9/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_49"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_50"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_51"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_52"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_8/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_8/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_53"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_54"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_55"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_56"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_8/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_8/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_57"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_58"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_59"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_60"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_7/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_7/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_61"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_62"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_63"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_64"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_7/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_7/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_65"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_66"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_67"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_68"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_6/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_6/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_69"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_70"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_71"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_72"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_6/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_6/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_73"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_74"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_75"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_76"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_5/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_5/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_77"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_78"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_79"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_80"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_5/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_5/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_81"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_82"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_83"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_84"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_4/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_4/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_85"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_86"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_87"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_88"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_4/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_4/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_89"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_90"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_91"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_92"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_3/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_3/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_93"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_94"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_95"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_96"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_3/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_3/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_97"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_98"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_99"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_100"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_2/pointwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_2/pw_batch_norm/Const"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Relu"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/read"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/tuple/control_dependency"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_101"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_102"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_103"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_104"
  op: "ZerosLike"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_ds_2/depthwise_conv/BiasAdd"
  input: "MobileNet/conv_ds_2/dw_batch_norm/Const"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "MobileNet/conv_1/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/Shape"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/read"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "MobileNet/conv_1/batch_norm/Relu"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/Shape_1"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/tuple/control_dependency"
  input: "MobileNet/conv_1/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_105"
  op: "ZerosLike"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_106"
  op: "ZerosLike"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_107"
  op: "ZerosLike"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_108"
  op: "ZerosLike"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/MobileNet/conv_1/batch_norm/Relu_grad/ReluGrad"
  input: "MobileNet/conv_1/BiasAdd"
  input: "MobileNet/conv_1/batch_norm/Const"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm:3"
  input: "MobileNet/conv_1/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/MobileNet/conv_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/MobileNet/conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/MobileNet/conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "ResizeBilinear"
  input: "MobileNet/conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/MobileNet/conv_1/Conv2D_grad/ShapeN"
  input: "MobileNet/conv_1/weights/read"
  input: "train/gradients/MobileNet/conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "ResizeBilinear"
  input: "train/gradients/MobileNet/conv_1/Conv2D_grad/ShapeN:1"
  input: "train/gradients/MobileNet/conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MobileNet/conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/MobileNet/conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/MobileNet/conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/MobileNet/conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MobileNet/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/MobileNet/conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MobileNet/conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/weights/Momentum"
  input: "MobileNet/conv_1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/biases/Momentum"
  input: "MobileNet/conv_1/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_1/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/beta/Momentum"
  input: "MobileNet/conv_1/batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_1/batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_1/batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1024
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum/read"
  op: "Identity"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/fc_16/weights/Momentum"
  input: "MobileNet/fc_16/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/fc_16/weights/Momentum/read"
  op: "Identity"
  input: "MobileNet/fc_16/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/Momentum/Assign"
  op: "Assign"
  input: "MobileNet/fc_16/biases/Momentum"
  input: "MobileNet/fc_16/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "MobileNet/fc_16/biases/Momentum/read"
  op: "Identity"
  input: "MobileNet/fc_16/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_1/weights"
  input: "MobileNet/conv_1/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_1/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_1/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_1/biases"
  input: "MobileNet/conv_1/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_1/batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_1/batch_norm/beta"
  input: "MobileNet/conv_1/batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_2/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_2/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_2/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_2/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_2/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_2/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_2/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_2/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_2/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_3/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_3/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_3/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_3/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_3/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_3/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_3/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_3/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_3/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_4/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_4/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_4/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_4/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_4/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_4/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_4/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_4/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_4/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_5/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_5/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_5/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_5/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_5/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_5/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_5/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_5/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_5/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_6/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_6/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_6/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_6/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_6/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_6/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_6/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_6/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_6/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_7/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_7/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_7/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_7/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_7/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_7/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_7/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_7/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_7/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_8/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_8/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_8/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_8/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_8/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_8/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_8/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_8/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_8/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_9/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_9/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_9/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_9/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_9/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_9/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_9/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_9/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_9/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_10/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_10/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_10/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_10/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_10/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_10/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_10/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_10/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_10/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_11/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_11/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_11/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_11/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_11/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_11/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_11/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_11/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_11/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_12/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_12/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_12/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_12/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_12/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_12/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_12/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_12/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_12/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_13/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_13/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_13/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_13/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_13/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_13/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_13/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_13/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_13/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/depthwise_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_14/depthwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_14/depthwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_14/dw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_14/dw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_14/pointwise_conv/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/Conv2D_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_14/pointwise_conv/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_14/pointwise_conv/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/conv_ds_14/pw_batch_norm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/conv_ds_14/pw_batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/fc_16/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/fc_16/weights"
  input: "MobileNet/fc_16/weights/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/fc_16/MatMul_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum/update_MobileNet/fc_16/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "MobileNet/fc_16/biases"
  input: "MobileNet/fc_16/biases/Momentum"
  input: "train/learning_rate_input"
  input: "train/gradients/MobileNet/fc_16/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "train/Momentum"
  op: "NoOp"
  input: "^train/Momentum/update_MobileNet/conv_1/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_1/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_1/batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_2/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_2/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_2/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_2/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_2/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_3/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_3/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_3/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_3/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_3/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_4/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_4/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_4/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_4/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_4/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_5/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_5/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_5/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_5/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_5/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_6/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_6/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_6/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_6/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_6/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_7/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_7/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_7/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_7/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_7/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_8/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_8/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_8/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_8/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_8/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_9/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_9/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_9/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_9/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_9/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_10/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_10/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_10/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_10/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_10/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_11/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_11/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_11/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_11/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_11/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_12/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_12/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_12/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_12/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_12/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_13/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_13/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_13/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_13/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_13/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_14/depthwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_14/dw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_14/pointwise_conv/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_14/pointwise_conv/biases/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/conv_ds_14/pw_batch_norm/beta/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/fc_16/weights/ApplyMomentum"
  input: "^train/Momentum/update_MobileNet/fc_16/biases/ApplyMomentum"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "MobileNet/fc_16/BiasAdd"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (groundtruth_input:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (groundtruth_input:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "groundtruth_input"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "groundtruth_input"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "ArgMax"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast_2"
  op: "Cast"
  input: "confusion_matrix/Cast_2/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/All"
  op: "All"
  input: "confusion_matrix/assert_less/Less"
  input: "confusion_matrix/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_3"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_2"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_3"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_2"
  op: "Identity"
  input: "confusion_matrix/control_dependency"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/All"
  op: "All"
  input: "confusion_matrix/assert_less_1/Less"
  input: "confusion_matrix/assert_less_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_3"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_2"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_3"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_3"
  op: "Identity"
  input: "confusion_matrix/control_dependency_1"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency_2"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "confusion_matrix/transpose/Rank"
  op: "Rank"
  input: "confusion_matrix/stack_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub"
  op: "Sub"
  input: "confusion_matrix/transpose/Rank"
  input: "confusion_matrix/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range"
  op: "Range"
  input: "confusion_matrix/transpose/Range/start"
  input: "confusion_matrix/transpose/Rank"
  input: "confusion_matrix/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub_1"
  op: "Sub"
  input: "confusion_matrix/transpose/sub"
  input: "confusion_matrix/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose"
  op: "Transpose"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ToInt64"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/transpose"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/ToInt64"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "global_step/read"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 221
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/beta"
        string_val: "MobileNet/conv_1/batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_1/batch_norm/moving_mean"
        string_val: "MobileNet/conv_1/batch_norm/moving_variance"
        string_val: "MobileNet/conv_1/biases"
        string_val: "MobileNet/conv_1/biases/Momentum"
        string_val: "MobileNet/conv_1/weights"
        string_val: "MobileNet/conv_1/weights/Momentum"
        string_val: "MobileNet/conv_ds_10/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_10/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_10/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_10/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_10/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_11/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_11/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_11/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_11/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_11/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_12/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_12/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_12/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_12/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_12/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_13/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_13/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_13/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_14/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_14/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_14/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_2/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_2/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_2/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_3/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_3/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_3/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_4/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_4/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_4/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_5/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_5/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_5/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_6/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_6/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_6/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_7/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_7/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_7/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_8/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_8/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_8/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_9/depthwise_conv/biases"
        string_val: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
        string_val: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum"
        string_val: "MobileNet/conv_ds_9/dw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
        string_val: "MobileNet/conv_ds_9/pointwise_conv/biases"
        string_val: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum"
        string_val: "MobileNet/conv_ds_9/pointwise_conv/weights"
        string_val: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum"
        string_val: "MobileNet/conv_ds_9/pw_batch_norm/beta"
        string_val: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum"
        string_val: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
        string_val: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
        string_val: "MobileNet/fc_16/biases"
        string_val: "MobileNet/fc_16/biases/Momentum"
        string_val: "MobileNet/fc_16/weights"
        string_val: "MobileNet/fc_16/weights/Momentum"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 221
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "MobileNet/conv_1/batch_norm/beta"
  input: "MobileNet/conv_1/batch_norm/beta/Momentum"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  input: "MobileNet/conv_1/biases"
  input: "MobileNet/conv_1/biases/Momentum"
  input: "MobileNet/conv_1/weights"
  input: "MobileNet/conv_1/weights/Momentum"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
  input: "MobileNet/fc_16/biases"
  input: "MobileNet/fc_16/biases/Momentum"
  input: "MobileNet/fc_16/weights"
  input: "MobileNet/fc_16/weights/Momentum"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/beta/Momentum"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/moving_mean"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "MobileNet/conv_1/batch_norm/moving_variance"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "MobileNet/conv_1/biases"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "MobileNet/conv_1/biases/Momentum"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "MobileNet/conv_1/weights"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_1/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "MobileNet/conv_1/weights/Momentum"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "MobileNet/conv_ds_10/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_10/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "MobileNet/conv_ds_11/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_11/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "MobileNet/conv_ds_12/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_12/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_13/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_14/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_2/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights"
  input: "save/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_116/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_116/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_116"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_116/tensor_names"
  input: "save/RestoreV2_116/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta"
  input: "save/RestoreV2_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_117/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_117/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_117"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_117/tensor_names"
  input: "save/RestoreV2_117/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_118/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_118/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_118"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_118/tensor_names"
  input: "save/RestoreV2_118/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_119/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_119/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_119"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_119/tensor_names"
  input: "save/RestoreV2_119/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_3/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_120/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_120/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_120"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_120/tensor_names"
  input: "save/RestoreV2_120/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases"
  input: "save/RestoreV2_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_121/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_121/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_121"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_121/tensor_names"
  input: "save/RestoreV2_121/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_122/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_122/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_122"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_122/tensor_names"
  input: "save/RestoreV2_122/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_123/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_123/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_123"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_123/tensor_names"
  input: "save/RestoreV2_123/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_124/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_124/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_124"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_124/tensor_names"
  input: "save/RestoreV2_124/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta"
  input: "save/RestoreV2_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_125/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_125/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_125"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_125/tensor_names"
  input: "save/RestoreV2_125/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_126/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_126/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_126"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_126/tensor_names"
  input: "save/RestoreV2_126/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_127/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_127/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_127"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_127/tensor_names"
  input: "save/RestoreV2_127/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_128/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_128/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_128"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_128/tensor_names"
  input: "save/RestoreV2_128/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases"
  input: "save/RestoreV2_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_129/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_129/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_129"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_129/tensor_names"
  input: "save/RestoreV2_129/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_130/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_130/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_130"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_130/tensor_names"
  input: "save/RestoreV2_130/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights"
  input: "save/RestoreV2_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_131/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_131/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_131"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_131/tensor_names"
  input: "save/RestoreV2_131/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_132/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_132/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_132"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_132/tensor_names"
  input: "save/RestoreV2_132/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta"
  input: "save/RestoreV2_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_133/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_133/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_133"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_133/tensor_names"
  input: "save/RestoreV2_133/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_134/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_134/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_134"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_134/tensor_names"
  input: "save/RestoreV2_134/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_135/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_135/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_135"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_135/tensor_names"
  input: "save/RestoreV2_135/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_4/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_136/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_136/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_136"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_136/tensor_names"
  input: "save/RestoreV2_136/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases"
  input: "save/RestoreV2_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_137/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_137/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_137"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_137/tensor_names"
  input: "save/RestoreV2_137/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_138/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_138/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_138"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_138/tensor_names"
  input: "save/RestoreV2_138/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_139/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_139/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_139"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_139/tensor_names"
  input: "save/RestoreV2_139/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_140/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_140/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_140"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_140/tensor_names"
  input: "save/RestoreV2_140/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta"
  input: "save/RestoreV2_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_141/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_141/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_141"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_141/tensor_names"
  input: "save/RestoreV2_141/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_142/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_142/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_142"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_142/tensor_names"
  input: "save/RestoreV2_142/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_143/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_143/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_143"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_143/tensor_names"
  input: "save/RestoreV2_143/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_144/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_144/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_144"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_144/tensor_names"
  input: "save/RestoreV2_144/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases"
  input: "save/RestoreV2_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_145/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_145/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_145"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_145/tensor_names"
  input: "save/RestoreV2_145/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_146/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_146/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_146"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_146/tensor_names"
  input: "save/RestoreV2_146/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights"
  input: "save/RestoreV2_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_147/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_147/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_147"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_147/tensor_names"
  input: "save/RestoreV2_147/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_148/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_148/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_148"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_148/tensor_names"
  input: "save/RestoreV2_148/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta"
  input: "save/RestoreV2_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_149/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_149/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_149"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_149/tensor_names"
  input: "save/RestoreV2_149/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_150/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_150/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_150"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_150/tensor_names"
  input: "save/RestoreV2_150/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_151/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_151/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_151"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_151/tensor_names"
  input: "save/RestoreV2_151/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_5/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_152/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_152/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_152"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_152/tensor_names"
  input: "save/RestoreV2_152/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases"
  input: "save/RestoreV2_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_153/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_153/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_153"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_153/tensor_names"
  input: "save/RestoreV2_153/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_154/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_154/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_154"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_154/tensor_names"
  input: "save/RestoreV2_154/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_155/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_155/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_155"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_155/tensor_names"
  input: "save/RestoreV2_155/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_156/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_156/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_156"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_156/tensor_names"
  input: "save/RestoreV2_156/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta"
  input: "save/RestoreV2_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_157/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_157/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_157"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_157/tensor_names"
  input: "save/RestoreV2_157/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_158/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_158/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_158"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_158/tensor_names"
  input: "save/RestoreV2_158/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_159/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_159/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_159"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_159/tensor_names"
  input: "save/RestoreV2_159/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_160/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_160/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_160"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_160/tensor_names"
  input: "save/RestoreV2_160/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases"
  input: "save/RestoreV2_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_161/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_161/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_161"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_161/tensor_names"
  input: "save/RestoreV2_161/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_162/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_162/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_162"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_162/tensor_names"
  input: "save/RestoreV2_162/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights"
  input: "save/RestoreV2_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_163/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_163/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_163"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_163/tensor_names"
  input: "save/RestoreV2_163/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_164/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_164/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_164"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_164/tensor_names"
  input: "save/RestoreV2_164/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta"
  input: "save/RestoreV2_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_165/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_165/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_165"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_165/tensor_names"
  input: "save/RestoreV2_165/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_166/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_166/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_166"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_166/tensor_names"
  input: "save/RestoreV2_166/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_167/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_167/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_167"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_167/tensor_names"
  input: "save/RestoreV2_167/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_6/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_168/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_168/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_168"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_168/tensor_names"
  input: "save/RestoreV2_168/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases"
  input: "save/RestoreV2_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_169/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_169/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_169"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_169/tensor_names"
  input: "save/RestoreV2_169/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_170/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_170/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_170"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_170/tensor_names"
  input: "save/RestoreV2_170/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_171/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_171/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_171"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_171/tensor_names"
  input: "save/RestoreV2_171/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_172/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_172/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_172"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_172/tensor_names"
  input: "save/RestoreV2_172/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta"
  input: "save/RestoreV2_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_173/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_173/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_173"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_173/tensor_names"
  input: "save/RestoreV2_173/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_174/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_174/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_174"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_174/tensor_names"
  input: "save/RestoreV2_174/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_175/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_175/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_175"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_175/tensor_names"
  input: "save/RestoreV2_175/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_176/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_176/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_176"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_176/tensor_names"
  input: "save/RestoreV2_176/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases"
  input: "save/RestoreV2_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_177/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_177/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_177"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_177/tensor_names"
  input: "save/RestoreV2_177/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_178/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_178/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_178"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_178/tensor_names"
  input: "save/RestoreV2_178/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights"
  input: "save/RestoreV2_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_179/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_179/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_179"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_179/tensor_names"
  input: "save/RestoreV2_179/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_180/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_180/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_180"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_180/tensor_names"
  input: "save/RestoreV2_180/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta"
  input: "save/RestoreV2_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_181/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_181/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_181"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_181/tensor_names"
  input: "save/RestoreV2_181/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_182/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_182/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_182"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_182/tensor_names"
  input: "save/RestoreV2_182/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_183/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_183/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_183"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_183/tensor_names"
  input: "save/RestoreV2_183/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_7/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_184/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_184/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_184"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_184/tensor_names"
  input: "save/RestoreV2_184/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases"
  input: "save/RestoreV2_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_185/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_185/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_185"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_185/tensor_names"
  input: "save/RestoreV2_185/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_186/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_186/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_186"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_186/tensor_names"
  input: "save/RestoreV2_186/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_187/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_187/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_187"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_187/tensor_names"
  input: "save/RestoreV2_187/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_188/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_188/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_188"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_188/tensor_names"
  input: "save/RestoreV2_188/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta"
  input: "save/RestoreV2_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_189/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_189/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_189"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_189/tensor_names"
  input: "save/RestoreV2_189/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_190/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_190/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_190"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_190/tensor_names"
  input: "save/RestoreV2_190/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_191/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_191/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_191"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_191/tensor_names"
  input: "save/RestoreV2_191/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_192/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_192/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_192"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_192/tensor_names"
  input: "save/RestoreV2_192/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases"
  input: "save/RestoreV2_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_193/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_193/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_193"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_193/tensor_names"
  input: "save/RestoreV2_193/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_194/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_194/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_194"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_194/tensor_names"
  input: "save/RestoreV2_194/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights"
  input: "save/RestoreV2_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_195/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_195/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_195"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_195/tensor_names"
  input: "save/RestoreV2_195/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_196/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_196/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_196"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_196/tensor_names"
  input: "save/RestoreV2_196/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta"
  input: "save/RestoreV2_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_197/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_197/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_197"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_197/tensor_names"
  input: "save/RestoreV2_197/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_198/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_198/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_198"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_198/tensor_names"
  input: "save/RestoreV2_198/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_199/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_199/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_199"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_199/tensor_names"
  input: "save/RestoreV2_199/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_8/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_200/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_200/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_200"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_200/tensor_names"
  input: "save/RestoreV2_200/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases"
  input: "save/RestoreV2_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_201/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_201/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_201"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_201/tensor_names"
  input: "save/RestoreV2_201/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "MobileNet/conv_ds_9/depthwise_conv/biases/Momentum"
  input: "save/RestoreV2_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_202/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_202/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_202"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_202/tensor_names"
  input: "save/RestoreV2_202/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
  input: "save/RestoreV2_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_203/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_203/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_203"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_203/tensor_names"
  input: "save/RestoreV2_203/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum"
  input: "save/RestoreV2_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/depthwise_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_204/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_204/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_204"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_204/tensor_names"
  input: "save/RestoreV2_204/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta"
  input: "save/RestoreV2_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_205/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_205/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_205"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_205/tensor_names"
  input: "save/RestoreV2_205/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_206/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_206/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_206"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_206/tensor_names"
  input: "save/RestoreV2_206/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
  input: "save/RestoreV2_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_207/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_207/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_207"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_207/tensor_names"
  input: "save/RestoreV2_207/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
  input: "save/RestoreV2_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/dw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_208/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_208/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_208"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_208/tensor_names"
  input: "save/RestoreV2_208/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases"
  input: "save/RestoreV2_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_209/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_209/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_209"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_209/tensor_names"
  input: "save/RestoreV2_209/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pointwise_conv/biases/Momentum"
  input: "save/RestoreV2_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_210/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_210/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_210"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_210/tensor_names"
  input: "save/RestoreV2_210/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights"
  input: "save/RestoreV2_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_211/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_211/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_211"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_211/tensor_names"
  input: "save/RestoreV2_211/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pointwise_conv/weights/Momentum"
  input: "save/RestoreV2_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pointwise_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_212/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_212/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_212"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_212/tensor_names"
  input: "save/RestoreV2_212/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta"
  input: "save/RestoreV2_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_213/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_213/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_213"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_213/tensor_names"
  input: "save/RestoreV2_213/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum"
  input: "save/RestoreV2_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_214/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_214/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_214"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_214/tensor_names"
  input: "save/RestoreV2_214/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
  input: "save/RestoreV2_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_215/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_215/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_215"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_215/tensor_names"
  input: "save/RestoreV2_215/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
  input: "save/RestoreV2_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/conv_ds_9/pw_batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_216/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/fc_16/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_216/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_216"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_216/tensor_names"
  input: "save/RestoreV2_216/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "MobileNet/fc_16/biases"
  input: "save/RestoreV2_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_217/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/fc_16/biases/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_217/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_217"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_217/tensor_names"
  input: "save/RestoreV2_217/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "MobileNet/fc_16/biases/Momentum"
  input: "save/RestoreV2_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_218/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/fc_16/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_218/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_218"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_218/tensor_names"
  input: "save/RestoreV2_218/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "MobileNet/fc_16/weights"
  input: "save/RestoreV2_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_219/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "MobileNet/fc_16/weights/Momentum"
      }
    }
  }
}
node {
  name: "save/RestoreV2_219/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_219"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_219/tensor_names"
  input: "save/RestoreV2_219/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "MobileNet/fc_16/weights/Momentum"
  input: "save/RestoreV2_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MobileNet/fc_16/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_220/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_220/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_220"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_220/tensor_names"
  input: "save/RestoreV2_220/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_220"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_220"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "cross_entropy_1"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^MobileNet/conv_1/weights/Assign"
  input: "^MobileNet/conv_1/biases/Assign"
  input: "^MobileNet/conv_1/batch_norm/beta/Assign"
  input: "^MobileNet/conv_1/batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_1/batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_2/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_2/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_2/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_2/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_2/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_2/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_2/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_2/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_2/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_3/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_3/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_3/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_3/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_3/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_3/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_3/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_3/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_3/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_4/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_4/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_4/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_4/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_4/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_4/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_4/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_4/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_4/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_5/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_5/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_5/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_5/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_5/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_5/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_5/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_5/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_5/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_6/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_6/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_6/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_6/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_6/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_6/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_6/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_6/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_6/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_7/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_7/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_7/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_7/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_7/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_7/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_7/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_7/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_7/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_8/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_8/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_8/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_8/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_8/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_8/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_8/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_8/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_8/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_9/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_9/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_9/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_9/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_9/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_9/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_9/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_9/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_9/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_10/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_10/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_10/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_10/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_10/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_10/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_10/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_10/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_10/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_11/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_11/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_11/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_11/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_11/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_11/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_11/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_11/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_11/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_12/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_12/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_12/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_12/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_12/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_12/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_12/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_12/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_12/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_13/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_13/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_13/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_13/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_13/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_13/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_13/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_13/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_13/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Assign"
  input: "^MobileNet/conv_ds_14/depthwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_14/dw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_14/dw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_14/dw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/conv_ds_14/pointwise_conv/weights/Assign"
  input: "^MobileNet/conv_ds_14/pointwise_conv/biases/Assign"
  input: "^MobileNet/conv_ds_14/pw_batch_norm/beta/Assign"
  input: "^MobileNet/conv_ds_14/pw_batch_norm/moving_mean/Assign"
  input: "^MobileNet/conv_ds_14/pw_batch_norm/moving_variance/Assign"
  input: "^MobileNet/fc_16/weights/Assign"
  input: "^MobileNet/fc_16/biases/Assign"
  input: "^MobileNet/conv_1/weights/Momentum/Assign"
  input: "^MobileNet/conv_1/biases/Momentum/Assign"
  input: "^MobileNet/conv_1/batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_2/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_2/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_2/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_2/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_2/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_2/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_3/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_3/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_3/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_3/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_3/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_3/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_4/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_4/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_4/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_4/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_4/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_4/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_5/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_5/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_5/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_5/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_5/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_5/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_6/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_6/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_6/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_6/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_6/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_6/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_7/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_7/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_7/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_7/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_7/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_7/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_8/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_8/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_8/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_8/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_8/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_8/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_9/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_9/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_9/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_9/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_9/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_9/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_10/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_10/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_10/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_10/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_10/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_10/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_11/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_11/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_11/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_11/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_11/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_11/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_12/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_12/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_12/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_12/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_12/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_12/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_13/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_13/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_13/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_13/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_13/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_13/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_14/depthwise_conv/depthwise_weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_14/depthwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_14/dw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/conv_ds_14/pointwise_conv/weights/Momentum/Assign"
  input: "^MobileNet/conv_ds_14/pointwise_conv/biases/Momentum/Assign"
  input: "^MobileNet/conv_ds_14/pw_batch_norm/beta/Momentum/Assign"
  input: "^MobileNet/fc_16/weights/Momentum/Assign"
  input: "^MobileNet/fc_16/biases/Momentum/Assign"
  input: "^global_step/Assign"
}
versions {
  producer: 24
}
